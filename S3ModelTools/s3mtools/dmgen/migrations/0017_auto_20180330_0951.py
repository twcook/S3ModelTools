# Generated by Django 2.0.3 on 2018-03-30 09:51

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dmgen', '0016_auto_20180325_2306'),
    ]

    operations = [
        migrations.AddField(
            model_name='attestation',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='audit',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='participation',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='party',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='referencerange',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='referencerange',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='referencerange',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='simplereferencerange',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='simplereferencerange',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='simplereferencerange',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='units',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='units',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='units',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdboolean',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdboolean',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdboolean',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdcount',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdcount',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdcount',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdfile',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdfile',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdfile',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdfloat',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdfloat',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdfloat',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdinterval',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdinterval',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdinterval',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdlink',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdlink',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdlink',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdordinal',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdordinal',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdordinal',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdquantity',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdquantity',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdquantity',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdratio',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdratio',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdratio',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdstring',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdstring',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdstring',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AddField(
            model_name='xdtemporal',
            name='require_location',
            field=models.BooleanField(default=False, help_text='Check this box to require a decimal longitude and latitude location.', verbose_name='Require Location?'),
        ),
        migrations.AddField(
            model_name='xdtemporal',
            name='seq',
            field=models.CharField(default='0000', help_text='Enter the sequence number (aka. TabIndex) for this component in the UI. Components nested in a Cluster are grouped together. When two or more components have the same number they will be sorted by label.', max_length=4, verbose_name='Sequence Number'),
        ),
        migrations.AddField(
            model_name='xdtemporal',
            name='ui_type',
            field=models.CharField(choices=[('choose', 'Choose Type:'), ('input', 'Input Box'), ('dropdown', 'Dropdown'), ('radiogroup', 'Radio Button Group'), ('radio', 'Radio Button'), ('checkbox', 'Checkbox(es)')], default='Choose UI Type:', help_text='Choose the preferred UI Type for this component. Use UX best practices.', max_length=40, verbose_name='Preferred UI Type'),
        ),
        migrations.AlterField(
            model_name='attestation',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='attestation',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='attestation',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='audit',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='audit',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='audit',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='ct_id',
            field=models.CharField(default='cjfdrqabu0002asl3q020r951', editable=False, help_text='The unique identifier for the DM.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='participation',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='participation',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='participation',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='party',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='party',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='party',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='referencerange',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='referencerange',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='referencerange',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='referencerange',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='simplereferencerange',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='simplereferencerange',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='simplereferencerange',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='simplereferencerange',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='units',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='units',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='units',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='units',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdboolean',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdboolean',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdboolean',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdboolean',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdcount',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdcount',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdcount',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdcount',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdfile',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdfile',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdfile',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdfile',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdfloat',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdfloat',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdfloat',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdfloat',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdinterval',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdinterval',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdinterval',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdinterval',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdlink',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdlink',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdlink',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdlink',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdordinal',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdordinal',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdordinal',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdordinal',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdquantity',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdquantity',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdquantity',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdquantity',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdratio',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdratio',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdratio',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdratio',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdstring',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdstring',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdstring',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdstring',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='xdtemporal',
            name='adapter_ctid',
            field=models.CharField(default='cjfdrqaak0001asl3cre1xh3k', editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdtemporal',
            name='ct_id',
            field=models.CharField(default='cjfdrqaaj0000asl3v0s07xds', editable=False, help_text='The unique identifier for the MC.', max_length=40, unique=True, verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='xdtemporal',
            name='description',
            field=models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC and as help text in the UI.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='xdtemporal',
            name='label',
            field=models.CharField(help_text='A human readable label used to identify this model in DMGEN. This will also be use in generated app UI.', max_length=110, verbose_name='label'),
        ),
    ]
