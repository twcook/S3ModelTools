# Generated by Django 2.0.3 on 2018-03-25 22:04

import cuid
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dmgen', '0009_auto_20180314_1928'),
    ]

    operations = [
        migrations.AddField(
            model_name='attestation',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='audit',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='dm',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the DM.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='participation',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='party',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='referencerange',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='referencerange',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='simplereferencerange',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='simplereferencerange',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='units',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='units',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdboolean',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdboolean',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdcount',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdcount',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdfile',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdfile',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdfloat',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdfloat',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdinterval',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdinterval',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdlink',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdlink',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdordinal',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdordinal',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdquantity',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdquantity',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdratio',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdratio',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdstring',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdstring',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdtemporal',
            name='adapter_cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AddField(
            model_name='xdtemporal',
            name='cuid',
            field=models.CharField(default=cuid.cuid, editable=False, help_text='The unique identifier for the MC.', max_length=40,   verbose_name='CUID'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdboolean',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more booleans to include in this Cluster.', related_name='cluster_related', to='dmgen.XdBoolean', verbose_name='Boolean'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdcount',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more counts to include in this Cluster.', related_name='cluster_related', to='dmgen.XdCount', verbose_name='Count'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdfile',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more media items to include in this Cluster.', related_name='cluster_related', to='dmgen.XdFile', verbose_name='File'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdfloat',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more floats to include in this Cluster.', related_name='cluster_related', to='dmgen.XdFloat', verbose_name='Float'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdlink',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more uris to include in this Cluster.', related_name='cluster_related', to='dmgen.XdLink', verbose_name='Link'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdordinal',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more ordinals to include in this Cluster.', related_name='cluster_related', to='dmgen.XdOrdinal', verbose_name='Ordinal'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdquantity',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more quantity items to include in this Cluster.', related_name='cluster_related', to='dmgen.XdQuantity', verbose_name='Quantity'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdratio',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more ratios to include in this Cluster.', related_name='cluster_related', to='dmgen.XdRatio', verbose_name='Ratio'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdstring',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more strings to include in this Cluster.', related_name='cluster_related', to='dmgen.XdString', verbose_name='String'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='xdtemporal',
            field=models.ManyToManyField(blank=True, help_text='Select zero or more temporal items to include in this Cluster.', related_name='cluster_related', to='dmgen.XdTemporal', verbose_name='Temporal'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='about',
            field=models.CharField(blank=True, default='http://dmgen.s3model.com/dmlib/', help_text="The URL to the DM after publication. The DM ID will be added after the trailing slash in the format of 'dm-{dm_id}.xsd' This provides a full path and filename for the dm as a unique identifier.", max_length=255, verbose_name='About'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='attestation',
            field=models.ForeignKey(blank=True, help_text='A model that allows an attestation that the data is correct.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='dmgen.Attestation', verbose_name='Attestation'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='audit',
            field=models.ManyToManyField(blank=True, help_text='Audit structure to provide audit trail tracking of information.', to='dmgen.Audit', verbose_name='Audit'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='coverage',
            field=models.CharField(blank=True, default='Universal', help_text='Enter the demographic, geographical or political coverage.', max_length=255, verbose_name='DC Coverage'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='The dateTime that the MC was created.', verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='data',
            field=models.ForeignKey(help_text='You must select the Cluster that is the structure for this model.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dm_related', to='dmgen.Cluster', verbose_name='Model Data'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='dc_format',
            field=models.CharField(default='text/xml', editable=False, help_text='The format of the data. Default is text/xml for DMs.', max_length=8, verbose_name='DC Format'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='dc_language',
            field=models.CharField(blank=True, choices=[('en-US', 'US English'), ('pt-BR', 'Brazilian Portuguese'), ('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en-US', help_text='The written language of the DM.', max_length=6, verbose_name='DC Language'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='dc_subject',
            field=models.CharField(blank=True, default='', help_text='Enter a semi-colon separated list of keywords. Usually MeSH terms', max_length=255, verbose_name='DC Subject'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='dc_type',
            field=models.CharField(default='S3Model Data Model (DM)', editable=False, max_length=110, verbose_name='DC Type'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='description',
            field=models.TextField(blank=True, help_text='Enter a general description of the purpose of this DM.', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='encoding',
            field=models.CharField(default='utf-8', help_text="<a href='http://www.iana.org/assignments/character-sets/character-sets.txt'>List of encoding types at IANA.</a>", max_length=10, verbose_name='Encoding'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='identifier',
            field=models.CharField(default='dm-', editable=False, max_length=110, verbose_name='DC Identifier'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='language',
            field=models.CharField(blank=True, choices=[('en-US', 'US English'), ('pt-BR', 'Brazilian Portuguese'), ('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en-US', help_text='Choose the language of this Data Model.', max_length=40, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='links',
            field=models.ManyToManyField(blank=True, default=None, help_text='Can be used to establish ad-hoc links between concepts.', related_name='dm_related_links', to='dmgen.XdLink', verbose_name='Links'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='participations',
            field=models.ManyToManyField(blank=True, help_text='Select any Participations components that describe additional entities involved in this model.', to='dmgen.Participation', verbose_name='Other Participations'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='pred_obj',
            field=models.ManyToManyField(blank=True, help_text='Select or create a new set of Predicate Object combinations as semantic links.', to='dmgen.PredObj', verbose_name='RDF Object'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='project',
            field=models.ForeignKey(help_text='Choose a Project for this Data Model (DM)', on_delete=django.db.models.deletion.CASCADE, to='dmgen.Project', to_field='prj_name', verbose_name='Project name'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='protocol',
            field=models.ForeignKey(blank=True, help_text='Optional external identifier of protocol used to create this Entry.  This could be a clinical guideline, an operations protocol,etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='dmgen.XdString', verbose_name='Protocol ID'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='provider',
            field=models.ForeignKey(blank=True, help_text='Select a Party componet that models the provider of the activity in this model.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dm_related_provider', to='dmgen.Party', verbose_name='Model Provider'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='publisher',
            field=models.CharField(blank=True, help_text='Enter the name of the publisher/copyright holder.', max_length=255, verbose_name='DC Publisher'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='relation',
            field=models.CharField(blank=True, default='None', help_text='Enter the relationship to another Data Model (DM), if applicable.', max_length=255, verbose_name='DC Relation'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='rights',
            field=models.CharField(blank=True, default='CC-BY http://creativecommons.org/licenses/by/3.0/', help_text='Enter the rights or license statement.', max_length=255, verbose_name='DC Rights'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='schema_code',
            field=models.TextField(blank=True, default='', help_text='This is only writable from the DMGEN, not via user input. It contains the code required for each component to create an entry in a DM.', null=True, verbose_name='Schema Code'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='source',
            field=models.CharField(blank=True, default='', help_text='Enter the name of a document or a URL to a supporting source.', max_length=255, verbose_name='DC Source'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='state',
            field=models.CharField(blank=True, help_text='The current state according to the state machine / workflow engine identified in workflow_id. You may enter a default/start state here.', max_length=110, verbose_name='Current State'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='subject',
            field=models.ForeignKey(blank=True, help_text='Refers to the subject component of the record for anonymous or identified reference.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dm_related_subject', to='dmgen.Party', verbose_name='Model Subject'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='title',
            field=models.CharField(help_text='Enter the name of this Data Model (DM).', max_length=255,   verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='updated',
            field=models.DateTimeField(auto_now=True, help_text='Last update.', verbose_name='Last updated'),
        ),
        migrations.AlterField(
            model_name='dm',
            name='workflow',
            field=models.ForeignKey(blank=True, help_text='Identifier of externally held workflow engine (state machine) data for this workflow execution.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='dmgen.XdLink', verbose_name='Workflow ID'),
        ),
        migrations.AlterField(
            model_name='modeler',
            name='email',
            field=models.EmailField(help_text='Enter the email address as it should appear in DM metadata as an author and/or contributor.', max_length=110, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='modeler',
            name='prj_filter',
            field=models.BooleanField(default=True, help_text='Uncheck this box if want to see choices from all projects. Note that this will very likely have a negative impact on performance.', verbose_name='Filter by Project'),
        ),
        migrations.AlterField(
            model_name='modeler',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Choose your default Project.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmgen.Project', to_field='prj_name', verbose_name='Default Project'),
        ),
    ]
