# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-24 11:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('dmgen', '0007_auto_20170814_1156'),
    ]

    operations = [
        migrations.CreateModel(
            name='XdFloat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='A human readable label used to identify this model in DMGEN.', max_length=110, verbose_name='label')),
                ('ct_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for this MC.', unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The dateTime that the MC was created.', verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Last update.', verbose_name='last updated')),
                ('published', models.BooleanField(default=False, help_text='Published must be a green check icon in order to use this in a DM. This is not user editable. It is managed by the publication process.', verbose_name='published')),
                ('description', models.TextField(help_text='Enter a free text description for this complexType. Include a usage statement and any possible misuses. This is used as the annotation for the MC.', null=True, verbose_name='description')),
                ('schema_code', models.TextField(blank=True, default='', help_text='This is only writable from the DMGEN, not via user input. It contains the code required for each component to create an entry in a DM.', null=True, verbose_name='Schema Code')),
                ('lang', models.CharField(choices=[('en-US', 'US English'), ('pt-BR', 'Brazilian Portuguese'), ('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en-US', help_text='Choose the language of this MC.', max_length=40, verbose_name='language')),
                ('adapter_ctid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='This UUID is generated for datatype that can be included in a Cluster. It is used to create a specific XdAdapter complexType.', unique=True, verbose_name='Adapter UUID')),
                ('require_vtb', models.BooleanField(default=False, help_text='Check this box to require a Valid Time Begin element.', verbose_name='Require Valid Time Begin?')),
                ('require_vte', models.BooleanField(default=False, help_text='Check this box to require a Valid Time End element.', verbose_name='Require Valid Time End?')),
                ('require_tr', models.BooleanField(default=False, help_text='Check this box to require a Date & Time Recorded element.', verbose_name='Require Time Recorded?')),
                ('require_mod', models.BooleanField(default=False, help_text='Check this box to require a Date & Time for last modified element.', verbose_name='Require Time Modified?')),
                ('normal_status', models.CharField(blank=True, help_text='Enter text that indicates a normal status. Example: This should be a Symbol in a XdOrdinal, a date range in a XdTemporal, a value range in a XdCount, etc.', max_length=110, null=True, verbose_name='normal status')),
                ('min_magnitude', models.DecimalField(blank=True, decimal_places=5, help_text="The minimum allowed value for a magnitude. If there isn't a min. then leave blank.", max_digits=10, null=True, verbose_name='minimum magnitude')),
                ('max_magnitude', models.DecimalField(blank=True, decimal_places=5, help_text="Any maximum allowed value. If there isn't a max. then leave blank.", max_digits=10, null=True, verbose_name='maximum magnitude')),
                ('min_inclusive', models.DecimalField(blank=True, decimal_places=5, help_text='Enter the minimum (inclusive) value for this concept.', max_digits=10, null=True, verbose_name='minimum inclusive')),
                ('max_inclusive', models.DecimalField(blank=True, decimal_places=5, help_text='Enter the maximum (inclusive) value for this concept.', max_digits=10, null=True, verbose_name='maximum inclusive')),
                ('min_exclusive', models.DecimalField(blank=True, decimal_places=5, help_text='Enter the minimum (exclusive) value for this concept.', max_digits=10, null=True, verbose_name='minimum exclusive')),
                ('max_exclusive', models.DecimalField(blank=True, decimal_places=5, help_text='Enter the maximum (exclusive) value for this concept.', max_digits=10, null=True, verbose_name='maximum exclusive')),
                ('total_digits', models.IntegerField(blank=True, help_text='Enter the maximum number of digits for this concept, excluding the decimal separator and the decimal places.', null=True, verbose_name='total digits')),
                ('creator', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, related_name='xdfloat_related_creator', to='dmgen.Modeler', verbose_name='Creator')),
                ('edited_by', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, related_name='xdfloat_related_edited_by', to='dmgen.Modeler', verbose_name='Last Edited By')),
                ('pred_obj', models.ManyToManyField(blank=True, help_text='Select or create a new set of RDF Objects as semantic links to define this item.', to='dmgen.PredObj', verbose_name='RDF Object')),
                ('project', models.ForeignKey(help_text='Choose the name of your Project.', on_delete=django.db.models.deletion.CASCADE, to='dmgen.Project', to_field='prj_name', verbose_name='Project Name')),
                ('reference_ranges', models.ManyToManyField(blank=True, help_text='Select the appropriate ReferenceRange that defines each ordered value. The listing is by Project: Reference Range Name.', to='dmgen.ReferenceRange', verbose_name='reference ranges')),
                ('simple_rr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dmgen.SimpleReferenceRange', verbose_name='Reference Range (Simple)')),
                ('units', models.ForeignKey(help_text='Choose a units of measurement of this concept.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xdfloat_related_units', to='dmgen.Units', verbose_name='units')),
            ],
            options={
                'verbose_name': 'Float',
                'verbose_name_plural': 'Floats',
                'ordering': ['project', 'label'],
            },
        ),
    ]
